#!/usr/bin/env node
var program = require('commander');
var colors  = require('colors');
var path    = require('path');

var parser  = require('../lib/parsing');
var builder = require('../lib/building');
var server  = require('../lib/serve');
var files   = require('../lib/files');
var pjson   = require('../package.json');

process.on('uncaughtException', function (err) {
    console.log('✘'.red + ' ' + err.message);
    process.exit(1);
});

/* Functions */
function pathFromArg (arg) {
	var sitePath = '.';
	if (typeof(arg) === 'string') {
		sitePath = path.resolve(arg);
	}
	return sitePath;
}

function build (sitePath) {
	console.log('Compiling website using config: ' + path.resolve(sitePath)+'/config.yml');
	
	var siteConfig = parser.parseConfig(sitePath);
	
	console.log('    pages: ' + siteConfig.paths.pages.input);
	console.log('    posts: ' + siteConfig.paths.posts.input);
	console.log('   assets: ' + siteConfig.paths.assets.input);
	console.log(' template: ' + siteConfig.paths.templateDir);

	builder.buildSite(siteConfig, function (err, websitePath) {
		if (err) {
			throw err;
		}
		console.log('\n'+'✔'.green + ' Compiled website at path: ' + websitePath);
	});
}

/* commander.js */
program
  .version(pjson.version)
  .option('create [path]', 'Create a new website at given path')
  .option('build [path]', 'Compile a website')
  .option('serve [path]', 'Start a server on localhost:port')
  .option('new <page|post>', 'Create a new post or page')
  .option('-p, --port [port]', 'Specify the port where to run the test server')
  .parse(process.argv);

if (program.create) {
	var sitePath = pathFromArg(program.create);
	builder.newWebsite(sitePath, function (err, path) {
		if (err) {
			throw err;
		}
		console.log('✔'.green + ' New website created at path: ' + path);
	});
}
else if (program.build) {
	var sitePath = pathFromArg(program.build);
	build(sitePath);
}
else if (program.serve) {
	var sitePath = pathFromArg(program.serve);
	var siteConfig = parser.parseConfig(sitePath);

	console.log('Starting webserver for website at path: ' + siteConfig.paths.buildDir);

	server.startServer(siteConfig, program.port || 8888, function (str) {
		console.log('✔'.green + ' Server running on ' + str);
	});
}
else if (program.new) {
	var sitePath = '.';
	var readline = require('readline').createInterface({ input: process.stdin, output: process.stdout });
	var siteConfig = parser.parseConfig(sitePath);

	switch (program.new) {
		case 'post':
			readline.question('Post title: ', function (title) {
				readline.question('Post author: ', function (author) {
					files.newPost(title, author, siteConfig.paths.posts.input, function (err, postPath) {
						if (err) {
							throw err;
						} else {
							console.log('✔'.green + ' New post created at path: ' + postPath);
						}
						readline.close();
					});
				});
			});
			break;
		case 'page':
			readline.question('Path to page from \'/\': ', function (pagePath) {
				pagePath = path.join(siteConfig.paths.pages.input, path.dirname(pagePath), path.basename(pagePath));
				files.newPage(path.basename(pagePath), path.dirname(pagePath), function (err) {
					if (err) {
						throw err;
					} else {
						console.log('✔'.green + ' New page created at path: ' + pagePath);
					}
					readline.close();
				});
			});
			break;
		default:
			throw new Error('wrong argument: ' + program.new + '\nUsage: miranda new <page|post>');
			break;
	}
}
else {
	program.help();
}
