#!/usr/bin/env node
var program = require('commander')
var colors  = require('colors')
var path    = require('path')

var parser  = require('../lib/parsing')
var builder = require('../lib/building')

process.on('uncaughtException', function (err) {
    console.log('✘'.red + ' ' + err.message)
    process.exit(1)
})

function list (val) {
	console.log(val)
	return val.split('.')
}

program
  .version('0.1.0')
  .option('build [path]', 'Compile a website')
  .option('new [path]', 'Create a new website at given path')
  .option('test <a>.<b>', 'a test', list)
  .parse(process.argv)

if (program.new) {
	var websitePath = '.'
	if (typeof(program.new) === 'string') {
		websitePath = program.new
	}
	builder.newWebsite(websitePath, function (err, path) {
		if (err) throw err
		console.log('✔'.green + ' New website created at path: ' + path)
	})
}
else if (program.build) {
	var configPath = '.'
	if (typeof(program.build) === 'string') {
		configPath = program.build
	}

	console.log('Compiling website using config: ' + path.resolve(configPath)+'/config.yml')
	
	var siteConfig = parser.parseConfig(configPath)
	
	console.log('    pages: ' + siteConfig.paths.pages.input)
	console.log('    posts: ' + siteConfig.paths.posts.input)
	console.log('   assets: ' + siteConfig.paths.assets.input)
	console.log(' template: ' + siteConfig.paths.templateDir)

	builder.buildSite(siteConfig, function (err, path) {
		if (err) throw err
		console.log('\n'+'✔'.green + ' Compiled website at path: ' + path)
	})
}
else if (program.test) {
	console.log(program.test)
}
else {
	program.help()
}