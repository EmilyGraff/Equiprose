#!/usr/bin/env node
var program = require('commander')
var pjson   = require('../package.json')
var cli     = require('../lib')

process.on('uncaughtException', function (err) {
  cli.logger.error(err.message)
  process.exit(1)
})

/* commander.js */
var commands = {
  'create': 'create [path]',
  'build': 'build [path]',
  'serve': 'serve [path] [options]',
  'new': 'new <page|post> [path]',
  'about': 'about'
}

program
  .version(pjson.version)

// TODO: Loop
program
  .command(commands['create'])
  .description('Create a new website at given path')
  .action(cli.create)

program
  .command(commands['build'])
  .description('Compile a website to its buildDir')
  .action(cli.build)

program
  .command(commands['serve'])
  .description('Start a server on localhost:port')
  .action(cli.serve)

program
  .command(commands['new'])
  .description('Create a new post or page')
  .action(cli.file)

program
  .command(commands['about'])
  .description('About Equiprose')
  .action(cli.about)

program.option('-p, --port [port]', 'Specify the port on which to run the test server')

program.on('--help', function () {
  CLI.logger.log('  Examples:')
  CLI.logger.log('')
  CLI.logger.log('    $ equiprose create ~/website')
  CLI.logger.log('    $ equiprose new post ~/website')
  CLI.logger.log('    $ equiprose serve ~/website -p 9000')
  CLI.logger.log('')
})

program.parse(process.argv)

if (program.rawArgs.length < 3) {
  program.help()
}

if (!commands.hasOwnProperty(process.argv[2])) {
  CLI.logger.log('  Invalid command: ' + process.argv[2])
  program.help()
}
